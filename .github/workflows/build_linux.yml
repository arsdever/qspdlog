name: Build and test

on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
      tag:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image }}:${{ inputs.tag }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Configure
        run: |
          set -e
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON

      - name: Build
        run: |
          set -e
          cmake --build build -j

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build

  test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/${{ github.repository }}:latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-build
          path: build

      - name: Test
        run: |
          set -e
          # https://github.com/actions/upload-artifact/issues/38
          # TODO: remove when the issue with preserving the permissions is fixed
          chmod +x build/test/qspdlog_test_ui
          cd build
          export DISPLAY=:1
          Xvfb :1 -screen 0 1024x768x24 &
          ctest --output-on-failure -j

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-profile
          path: build/test/default.profraw

  report_coverage:
    runs-on: ubuntu-latest
    needs: test
    container:
      image: ghcr.io/${{ github.repository }}:latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-profile
          path: build

      - name: Report coverage
        run: |
          set -e
          cd build
          llvm-profdata-15 merge -sparse test/coverage.profraw -o test/coverage.profdata
          llvm-cov-15 show -instr-profile=test/coverage.profdata --format=text -o coverage.txt

      - name: Upload coverage repot to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: uitests
          name: ${{ inputs.tag }}
          fail_ci_if_error: true
